//padding, margin spacer vars
/*
How it works: The helper classes apply margin or padding to an element ranging from 0 to 5. Each size increment was designed
to align with common Material Design spacings. These classes can be applied using
the following format {property}{direction}-{size}.

The property applies the type of spacing:

m - applies margin p - applies padding The direction designates the side the property applies to:

t - applies the spacing for *-top
b - applies the spacing for *-bottom
l - applies the spacing for *-left
r - applies the spacing for *-right
x - applies the spacing for both -left and -right
y - applies the spacing for both -top and -bottom
a - applies the spacing for the property in all directions
 */

$spacer: 16;
$max: 5;
$zero: 0px;
$one: unquote( ( $spacer * 0.25  ) + 'px' );
$two: unquote( ( $spacer * 0.5  ) + 'px' );
$three: unquote( ( $spacer ) + 'px' );
$four: unquote( ( $spacer * 1.5 ) + 'px' );
$five: unquote( ( $spacer * 3 ) + 'px' );
$six: unquote( ( $spacer * 5 ) + 'px' );

$spaces: ($zero, $one, $two, $three, $four, $five, $six); // Adjust this to include the pixel amounts you need.
$sides: (x, y, all, top, bottom, left, right); // Leave this variable alone
$i: 0;
@each $space in $spaces {
  @each $side in $sides {
    @if $side == all {
      .pa-#{$i} {
        padding: #{$space} #{$space} !important;
      }
    } @else if $side == x {
      .px-#{$i} {
        padding-left: #{$space} !important;
        padding-right: #{$space} !important;
      }
    } @else if $side == y {
      .py-#{$i} {
        padding-top: #{$space} !important;
        padding-bottom: #{$space} !important;
      }
    } @else {
      .p#{str-slice($side, 0, 1)}-#{$i} {
        padding-#{$side}: #{$space} !important;
      }
    }
  }
  @each $side in $sides {
    @if $side == all {
      .ma-#{$i} {
        margin: #{$space} #{$space} !important;
      }
    } @else if $side == x {
      .mx-#{$i} {
        margin-left: #{$space} !important;
        margin-right: #{$space} !important;
      }
    } @else if $side == y {
      .my-#{$i} {
        margin-top: #{$space} !important;
        margin-bottom: #{$space} !important;
      }
    } @else {
      .m#{str-slice($side, 0, 1)}-#{$i} {
        margin-#{$side}: #{$space} !important;
      }
    }
  }
  $i: $i + 1;
}